{"version":3,"sources":["components/App/img/LogoAirplan.svg","components/App/img/S7 Logo.svg","services/fetch.js","actions/actions.js","components/Filter/Filter.js","components/tabs/sortingTickets.js","components/ticket/ticketBody.js","components/App/App.js","reducers/initialState.js","reducers/reducerFilter.js","reducers/reducerSorting.js","reducers/reducerFetch.js","reducers/combineReducer.js","store/store.js","index.js"],"names":["module","exports","sendRequestPattern","method","URL","a","fetch","response","ok","json","data","console","err","getSearchId","getSearchToKey","searchId","FETCH_REQUEST","boolean","type","payload","FETCH_REQUEST_GOOD","tickets","FETCH_REQUEST_BAD","GET_TICKETS","dispatch","request","stop","toggleCheckAll","id","toggleCheckbox","isChecked","NUMBER_STOPS","THE_SORTING","connect","checkBoxSettings","reducerFilter","actions","props","elements","map","el","label","key","className","onClick","checked","sortingStatus","reducerSorting","classes","push","join","sortAndFilterTickets","reducerFetch","resultArray","usedActualFilter","arrayIdFilter","arrayTickets","filter","elem","segments","stops","length","allFilterNoChecked","every","allFilterChecked","fast","array","sort","b","duration","cheap","price","cheapIndex","some","element","fastIndex","log","arrayWorkingOfTickets","loadingEnd","carrier","date0","Date","date","date1","getTimeFlay","dateFinal","getTime","getHours","getMinutes","toString","timeToFlay","min","Math","trunc","src","logoS7","alt","origin","destination","slice","antIcon","LoadingOutlined","style","fontSize","spin","marginSpinner","marginTop","useEffect","logo","spinning","size","indicator","hideBodyTickets","initialState","state","action","newCheckBoxSettings","toggleAllChecked","controlChecked","newSortingStatus","oldTicket","combineReducers","store","createStore","combineReducer","composeWithDevTools","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8f4e911.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/LogoAirplan.3fe3a289.svg\";","module.exports = __webpack_public_path__ + \"static/media/S7 Logo.35aae663.svg\";","const searchIdUrl = \"https://front-test.beta.aviasales.ru/search\"\r\nconst requestUrl = \"https://front-test.beta.aviasales.ru/tickets\"\r\n\r\nasync function sendRequestPattern(method, URL) {\r\n  try {\r\n    const response = await fetch(URL)\r\n    if (response.ok){\r\n      const data = await response.json()\r\n      return data\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.err(e)\r\n  }\r\n}\r\nconst getSearchId = sendRequestPattern(\"GET\", searchIdUrl);\r\nconst getSearchToKey =(searchId) =>\r\n  sendRequestPattern(\"GET\", `${requestUrl}?searchId=${searchId}`)\r\n\r\nexport{getSearchId,getSearchToKey}","\r\nimport {getSearchId, getSearchToKey} from \"../services/fetch\";\r\n\r\nexport const FETCH_REQUEST = (boolean) => ({type: 'FETCH_REQUEST', payload: boolean});\r\nexport const FETCH_REQUEST_GOOD = (tickets) => ({type: 'FETCH_REQUEST_GOOD', payload: tickets});\r\nexport const FETCH_REQUEST_BAD = () => ({type: 'FETCH_REQUEST_BAD', payload: 'Error'});\r\n\r\nexport const GET_TICKETS = () => async (dispatch) => {\r\n    const searchId = await getSearchId;\r\n\r\n    const request = async () => {\r\n        try {\r\n            const tickets = await getSearchToKey(searchId.searchId)\r\n\r\n            dispatch(FETCH_REQUEST_GOOD(tickets.tickets));\r\n            dispatch(FETCH_REQUEST(true));\r\n            if (!tickets.stop) {\r\n                dispatch(FETCH_REQUEST_BAD());\r\n                return request();\r\n            } else {\r\n                dispatch(FETCH_REQUEST(false));\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            return request();\r\n        }\r\n    }\r\n    return request();\r\n};\r\nexport const toggleCheckAll = (id) =>\r\n    ({\r\n        type: 'CHECKED_ALL',\r\n        payload: id,\r\n    });\r\n\r\nexport const toggleCheckbox = (id, isChecked) => (dispatch) => {\r\n    dispatch({\r\n        type: 'CHECKED',\r\n        payload: id,\r\n    })\r\n    dispatch(NUMBER_STOPS(id, isChecked))\r\n};\r\n\r\nexport const NUMBER_STOPS = (id, isChecked) =>\r\n    ({\r\n        type: 'NUMBER_STOPS',\r\n        payload: {\r\n            id,\r\n            isChecked\r\n        },\r\n    });\r\n\r\nexport const THE_SORTING = (id, isChecked) => (\r\n    id ? {\r\n        type: 'THE_SORTING',\r\n        payload: {\r\n            isChecked,\r\n            id\r\n        }\r\n    } : {\r\n        type: 'THE_SORTING',\r\n        payload: {\r\n            id: null\r\n        }\r\n    })","import React from \"react\";\r\nimport './Filter.css';\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../../actions/actions\";\r\n\r\n\r\nfunction Filter (props) {\r\n  const {checkBoxSettings, toggleCheckAll, toggleCheckbox} = props\r\n  const elements = checkBoxSettings.map((el) => {\r\n    const { label, id, isChecked} = el\r\n    return (\r\n      <label key={ id } className=\"container__checkbox option\">\r\n        <input type=\"checkbox\" className=\"check__input totalCheckbox\"\r\n               onClick = {() => {\r\n                 id === \"All\"? toggleCheckAll(id,isChecked):toggleCheckbox(id,isChecked)}\r\n               }\r\n               checked={isChecked}\r\n        />\r\n        <span className=\"custom__check__box\"/>\r\n        {label}\r\n      </label>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"filter__checkbox__wrapper\">\r\n            <span className=\"container__checkbox__name option\">\r\n              КОЛИЧЕСТВО ПЕРЕСАДОК\r\n            </span>\r\n        {elements}\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({reducerFilter})=> {\r\n  return {\r\n      checkBoxSettings: reducerFilter.checkBoxSettings ,\r\n  };\r\n}\r\n\r\nFilter.propTypes = {\r\n    state: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    GET_TICKETS: PropTypes.func.isRequired,\r\n    toggleCheckAll:PropTypes.func.isRequired,\r\n    toggleCheckbox:PropTypes.func.isRequired,\r\n\r\n};\r\n\r\n\r\nexport default connect (mapStateToProps, actions)(Filter)","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport './Tabs.css';\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../../actions/actions\";\r\n\r\nfunction SortingTickets(props) {\r\n\r\n    const {THE_SORTING, sortingStatus} = props\r\n\r\n    const elements = sortingStatus.map((el) => {\r\n        const {id, label, isChecked} = el\r\n        const classes = ['tabs__button']\r\n\r\n        if (!isChecked) classes.push(\"tabs__button1\")\r\n        return (\r\n            <button className={classes.join(' ')}\r\n                    id={id}\r\n                    onClick={() => {\r\n                        THE_SORTING(id, isChecked)\r\n                    }}>{label}\r\n            </button>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"tabs\">\r\n            {elements}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({reducerSorting}) => {\r\n    return {\r\n        sortingStatus: reducerSorting.sortingStatus,\r\n    };\r\n}\r\n\r\nSortingTickets.propTypes = {\r\n    sortingStatus: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    THE_SORTING: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(SortingTickets)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport logoS7 from \"../App/img/S7 Logo.svg\";\r\nimport './ticket.css';\r\nimport PropTypes from \"prop-types\";\r\nimport * as actions from \"../../actions/actions\";\r\n\r\n\r\nconst sortAndFilterTickets = (reducerFetch, reducerFilter,reducerSorting,resultArray=[])=> {\r\n\r\n    const usedActualFilter = () => {\r\n      reducerFilter.checkBoxSettings.map((el) => {\r\n        const arrayIdFilter = reducerFetch.arrayTickets.filter(elem =>\r\n          (elem.segments[0].stops.length + elem.segments[1].stops.length === el.id))\r\n        const allFilterNoChecked = reducerFilter.checkBoxSettings.every(elem =>!elem.isChecked)\r\n        const allFilterChecked = reducerFilter.checkBoxSettings.every(elem =>elem.isChecked)\r\n\r\n        if (el.isChecked&&el.id ==='All'){\r\n          resultArray=[...reducerFetch.arrayTickets]\r\n        }else if(!el.isChecked&&el.id ==='All') {\r\n          resultArray = [];\r\n        }\r\n        if (el.isChecked && !allFilterChecked) {\r\n          resultArray.push(...arrayIdFilter)\r\n        }else if (allFilterNoChecked){\r\n          resultArray = []\r\n        }\r\n      })\r\n      return resultArray\r\n      }\r\n\r\n    const fast = (array) => {\r\n      return [...array.sort((a, b) => (a.segments[0].duration + a.segments[1].duration) - (b.segments[0].duration + b.segments[1].duration))];\r\n    }\r\n\r\n    const cheap = (array) => {\r\n      return [...array.sort((a, b) => (a.price - b.price))];\r\n    }\r\n\r\n    const cheapIndex = reducerSorting.sortingStatus.some(element => !element.isChecked && element.id === 'cheap')\r\n    const fastIndex = reducerSorting.sortingStatus.some(element => !element.isChecked && element.id === 'fast')\r\n\r\n    if (cheapIndex) {\r\n      console.log(usedActualFilter())\r\n      return cheap(usedActualFilter())\r\n    } else if (fastIndex) {\r\n      console.log(usedActualFilter())\r\n      return fast(usedActualFilter())\r\n    } else {\r\n      return usedActualFilter()\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function TicketBody({ arrayWorkingOfTickets }) {\r\n\r\n    const arrayTickets = arrayWorkingOfTickets.map(el => {\r\n\r\n      const { price, carrier, segments } = el\r\n      const date0 = new Date(segments[0].date)\r\n      const date1 = new Date(segments[1].date)\r\n\r\n      const getTimeFlay = (date) => {\r\n        const dateFinal = new Date(date.getTime() + (segments[0].duration * 60000))\r\n        const result = `${date.getHours()}:${date.getMinutes() > 10 ? date.getMinutes() : `0${date.getMinutes()}`}\r\n      -${dateFinal.getHours()}:${dateFinal.getMinutes() > 10 ? dateFinal.getMinutes() : `0${dateFinal.getMinutes()}`}`\r\n        return result.toString()\r\n      }\r\n\r\n      const timeToFlay = (min) => {\r\n        const result = `${Math.trunc(min / 60)}ч ${min % 60} мин`\r\n        return result\r\n      }\r\n\r\n      return (\r\n\r\n        <div className=\"ticket\">\r\n          <div className=\"ticket__header\">\r\n                  <span className=\"ticket__price\">\r\n                    {`${price} Р`}\r\n                  </span>\r\n            <img src={logoS7} alt=\"лого S7\" className=\"logo_S7\"/>\r\n          </div>\r\n          <div className=\"ticket__container__info\">\r\n            <div className=\"ticket__info\">\r\n              <div className=\"info__ticket__route\">\r\n            <span className=\"info__ticket__route__title\">\r\n              {`${segments[0].origin} - ${segments[0].destination}`}\r\n            </span>\r\n                <span className=\"info__ticket__route__time\">\r\n                 {getTimeFlay(date0)}\r\n            </span>\r\n              </div>\r\n              <div className=\"info__ticket__lenght\">\r\n                <span className=\"info__ticket__lenght__text\">В ПУТИ</span>\r\n                <span className=\"info__ticket__lenght__time\">\r\n                {timeToFlay(segments[0].duration)}\r\n            </span>\r\n              </div>\r\n              <div className=\"info__ticket__stops\">\r\n            <span className=\"info__ticket__stops__counter\">\r\n              {`${segments[0].stops.length} ПЕРЕСАДКИ`}\r\n            </span>\r\n                <span className=\"info__ticket__stops__name\">\r\n               {segments[0].stops.join(', ')}\r\n            </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"ticket__info\">\r\n              <div className=\"info__ticket__route\">\r\n              <span className=\"info__ticket__route__title\">\r\n                {`${segments[1].origin} - ${segments[1].destination}`}\r\n              </span>\r\n                <span className=\"info__ticket__route__time\">\r\n                {getTimeFlay(date1)}\r\n              </span>\r\n              </div>\r\n              <div className=\"info__ticket__lenght\">\r\n                <span className=\"info__ticket__lenght__text\">В ПУТИ</span>\r\n                <span className=\"info__ticket__lenght__time\">\r\n                {timeToFlay(segments[1].duration)}\r\n              </span>\r\n              </div>\r\n              <div className=\"info__ticket__stops\">\r\n              <span className=\"info__ticket__stops__counter\">\r\n                {`${segments[1].stops.length} ПЕРЕСАДКИ`}\r\n              </span>\r\n                <span className=\"info__ticket__stops__name\">\r\n                {segments[1].stops.join(', ')}\r\n              </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n    return arrayTickets.slice(0, 5);\r\n  }\r\n\r\n  const mapStateToProps = ({ reducerFetch, reducerFilter, reducerSorting }) => {\r\n\r\n    return {\r\n      arrayWorkingOfTickets:[...sortAndFilterTickets(reducerFetch, reducerFilter, reducerSorting)],\r\n      loadingEnd: reducerFetch.loadingEnd,\r\n    }\r\n  }\r\n\r\n  TicketBody.propTypes = {\r\n    state: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    arrayTickets: PropTypes.array,\r\n  };\r\n\r\nexport default connect (mapStateToProps, actions)(TicketBody)","import React, {useEffect} from 'react';\r\nimport logo from './img/LogoAirplan.svg'\r\nimport './App.css';\r\nimport {Spin} from 'antd';\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\nimport 'antd/dist/antd.css';\r\nimport PropTypes from 'prop-types';\r\nimport Filter from \"../Filter/Filter\";\r\nimport SortingTickets from \"../tabs/sortingTickets\";\r\nimport TicketBody from \"../ticket/ticketBody\";\r\nimport {connect} from \"react-redux\";\r\nimport * as actions from \"../../actions/actions\";\r\nconst antIcon = <LoadingOutlined style={{fontSize: 24}} spin/>\r\n\r\nconst marginSpinner = {\r\n    marginTop: '50%',\r\n}\r\n\r\nfunction App({loadingEnd,GET_TICKETS,allFilterNoChecked}) {\r\n    useEffect(() => {\r\n        GET_TICKETS();\r\n    }, [GET_TICKETS]);\r\n\r\n\r\n    const hideBodyTickets = (allFilterNoChecked) => {\r\n        if (allFilterNoChecked) {\r\n            return (<p>Рейсов, подходящих под заданные фильтры, не найдено</p>)\r\n        } else {\r\n            return (<TicketBody/>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"logo__container\">\r\n                <img src={logo} alt=\"лого самолет\" className=\"logo-airplane-png\"/>\r\n            </div>\r\n            <Filter/>\r\n            <div className=\"container__result\">\r\n                <SortingTickets/>\r\n                <Spin spinning={loadingEnd} size=\"large\" indicator={antIcon} className={marginSpinner}/>\r\n                {hideBodyTickets(allFilterNoChecked)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps =({reducerFetch,reducerFilter}) => (\r\n   {\r\n    tickets: reducerFetch.arrayTickets,\r\n    loadingEnd: reducerFetch.loadingEnd,\r\n    allFilterNoChecked: reducerFilter.checkBoxSettings.every(elem => !elem.isChecked)\r\n}\r\n)\r\n\r\nApp.propTypes = {\r\n    state: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    GET_TICKETS: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, actions)(App);\r\n","const initialState = {\r\n    checkBoxSettings:[\r\n        {label: \"Все\", id:\"All\", isChecked: true,},\r\n        {label: \"Без пересадок\", id:0, isChecked: true,},\r\n        {label: \"1 пересадка\", id:1, isChecked: true, },\r\n        {label: \"2 пересадки\", id:2, isChecked: true, },\r\n        {label: \"3 пересадки\", id:3, isChecked: true, },\r\n    ],\r\n    sortingStatus:[\r\n        {label:\"САМЫЙ ДЕШЕВЫЙ\", id:\"cheap\", isChecked:true},\r\n        {label:\"САМЫЙ БЫСТРЫЙ\", id:\"fast\", isChecked:true}\r\n    ],\r\n    arrayTickets: [],\r\n    // arrayWorkingOfTickets:[],\r\n    loadingEnd:false\r\n}\r\n\r\nexport default initialState","import initialState from \"./initialState\"\r\n\r\nconst reducerFilter = (state= initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'CHECKED_ALL':\r\n            if (action.payload === \"All\") {\r\n                if (!state.checkBoxSettings[0].isChecked) {\r\n                    const newCheckBoxSettings = state.checkBoxSettings.map(el => ({...el, isChecked: true}))\r\n                    return {\r\n                        ...state,\r\n                        checkBoxSettings:newCheckBoxSettings,\r\n                    }\r\n                } \r\n                    const newCheckBoxSettings = state.checkBoxSettings.map(el => ({...el, isChecked: false}))\r\n                    return {\r\n                        ...state,\r\n                        checkBoxSettings:newCheckBoxSettings,\r\n                    }\r\n            }\r\n        break;\r\n        case \"CHECKED\":\r\n            const newCheckBoxSettings = state.checkBoxSettings.map((el) =>\r\n                ( el.id === action.payload ? {...el, isChecked: !el.isChecked}: el))\r\n            const toggleAllChecked = () => {\r\n                const index = newCheckBoxSettings.slice(1)\r\n                const controlChecked = index.every(el=>el.isChecked===true)\r\n                const indexStart = newCheckBoxSettings.slice(0,1)\r\n                indexStart[0].isChecked = controlChecked\r\n            }\r\n            if (action.payload !== \"All\") {\r\n                toggleAllChecked()\r\n                return {...state,checkBoxSettings:newCheckBoxSettings}\r\n            }\r\n        break;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducerFilter;","import initialState from \"./initialState\"\r\n\r\n\r\nconst reducerSorting = (state= initialState, action) => {\r\n\r\n    const fast = (array) =>{\r\n        return array.sort((a, b) =>\r\n            (a.segments[0].duration + a.segments[1].duration) - (b.segments[0].duration + b.segments[1].duration))}\r\n\r\n    const cheap = (array)=>{\r\n        return array.sort((a, b) => (a.price - b.price))}\r\n\r\n    switch (action.type) {\r\n\r\n        case 'THE_SORTING':\r\n            const newSortingStatus = state.sortingStatus.map((el) => {\r\n                if (action.payload.id === el.id) {\r\n                    return {...el, isChecked: !action.payload.isChecked}\r\n                } \r\n                    return {...el, isChecked: true}\r\n                \r\n            })\r\n\r\n            return {\r\n                ...state,\r\n                arrayWorkingOfTickets: action.payload.id === \"fast\" ? fast(state.arrayTickets) :\r\n                    cheap(state.arrayTickets),\r\n                sortingStatus: newSortingStatus\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n\r\n};\r\n\r\nexport default reducerSorting;","import initialState from \"./initialState\"\r\n\r\n\r\nconst reducerFetch = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"FETCH_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loadingEnd: action.payload\r\n            }\r\n\r\n    case 'FETCH_REQUEST_GOOD':\r\n      const oldTicket = state.arrayTickets;\r\n      return {\r\n        ...state,\r\n        arrayTickets: [...oldTicket, ...action.payload],\r\n      }\r\n\r\n    default:\r\n      return  state;\r\n  }\r\n};\r\n\r\nexport default reducerFetch;","import {combineReducers} from \"redux\";\r\nimport reducerFilter from './reducerFilter';\r\nimport reducerSorting from \"./reducerSorting\";\r\nimport reducerFetch from \"./reducerFetch\";\r\n\r\nexport default combineReducers({\r\n    reducerFetch,\r\n    reducerFilter,\r\n    reducerSorting,\r\n})","import {applyMiddleware, createStore} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport combineReducer from \"../reducers/combineReducer\";\r\n\r\nconst store = createStore(combineReducer, composeWithDevTools(\r\n    applyMiddleware(\r\n        // logger,\r\n        reduxThunk\r\n    )));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport './components/App/App.css';\r\nimport App from \"./components/App/App\";\r\nimport store from \"./store/store\";\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}