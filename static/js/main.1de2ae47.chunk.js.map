{"version":3,"sources":["state/initialState.js","reducer/reducer.js","fetch.js","actions/actionsForFilter.js","components/Filter/Filter.js","actions/actionsForSortingTickets.js","components/tabs/sortingTickets.js","components/ticket/ticketBody.js","components/App/App.js","index.js","middleware/logger.js","components/App/img/LogoAirplan.svg","components/App/img/S7 Logo.svg"],"names":["initialState","checkBoxSettings","label","id","isChecked","disabled","arrayTickets","arrayWorkingOfTickets","loadingEnd","reducer","state","action","type","payload","nonStopsArray","filter","el","segments","stops","length","nonStopsResult","sort","a","oneStopsArray","oneStopsResult","twoStopsArray","twoStopsResult","threeStopsArray","threeStopsResult","newCheckBoxSettings","map","toggleAllChecked","controlChecked","slice","every","oldTicket","cheapset","b","price","fastest","duration","console","log","sendRequestPattern","method","URL","fetch","response","ok","json","data","err","getSearchId","getSearchToKey","searchId","toggleCheckAll","toggleCheckbox","dispatch","NON_STOPS","ONE_STOPS","TWO_STOPS","THREE_STOPS","FETCH_REQUEST","boolean","FETCH_REQUEST_GOOD","tickets","FETCH_REQUEST_BAD","GET_TICKETS","request","stop","connect","actionsForFilter","props","elements","key","className","onClick","checked","THE_CHEAPSET","THE_FASTEST","OPTIMAL","actionsForSortingTickets","value","actionsForTickets","carrier","date0","Date","date","date1","getTimeFlay","dateFinal","getTime","getHours","getMinutes","toString","timeToFlay","min","Math","trunc","src","logoS7","alt","origin","destination","join","antIcon","LoadingOutlined","style","fontSize","spin","marginSpinner","marginTop","useEffect","logo","spinning","size","indicator","store","createStore","applyMiddleware","next","getState","result","reduxThunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1de2ae47.chunk.js","sourcesContent":["import {array} from \"prop-types\";\r\n\r\nexport const initialState = {\r\n  checkBoxSettings:[\r\n    {label: \"Все\", id:1, isChecked: false, disabled:false},\r\n    {label: \"Без пересадок\", id:2, isChecked: false, disabled: false},\r\n    {label: \"1 пересадка\", id:3, isChecked: false, disabled: false},\r\n    {label: \"2 пересадки\", id:4, isChecked: false, disabled: false},\r\n    {label: \"3 пересадки\", id:5, isChecked: false, disabled: false}\r\n  ],\r\n  arrayTickets: [],\r\n  arrayWorkingOfTickets:[],\r\n  loadingEnd:false\r\n}\r\n","import {array, bool, number} from \"prop-types\";\r\nimport {initialState} from \"../state/initialState\";\r\nimport {compareArraysAsSet} from \"@testing-library/jest-dom/dist/utils\";\r\n\r\n\r\n\r\nconst reducer = (state=initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"FETCH_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loadingEnd: action.payload\r\n            }\r\n\r\n    case 'NON_STOPS':\r\n        if (action.payload) {\r\n            const nonStopsArray = state.arrayWorkingOfTickets.filter(el =>\r\n                !(el.segments[0].stops.length===0&&el.segments[1].stops.length === 0))\r\n            return {\r\n                ...state,\r\n                arrayWorkingOfTickets:nonStopsArray\r\n            }\r\n        }else{\r\n            const nonStopsArray = state.arrayTickets.filter(el =>\r\n                (el.segments[0].stops.length===0&&el.segments[1].stops.length === 0))\r\n            const nonStopsResult = [...nonStopsArray,...state.arrayWorkingOfTickets].sort((a)=>{\r\n                a = a.segments[0].stops.length+a.segments[1].stops.length\r\n                if(a === 0)\r\n                    return 1\r\n            });\r\n            return {\r\n                ...state,\r\n                arrayWorkingOfTickets:nonStopsResult\r\n            }\r\n        }\r\n\r\n\r\n        case 'ONE_STOPS':\r\n            if (action.payload) {\r\n                const oneStopsArray = state.arrayWorkingOfTickets.filter(el =>\r\n              !(el.segments[0].stops.length + el.segments[1].stops.length - 1 === 0))\r\n          return {\r\n              ...state,\r\n              arrayWorkingOfTickets:oneStopsArray\r\n          }\r\n      }else{\r\n          const oneStopsArray = state.arrayTickets.filter(el =>\r\n              (el.segments[0].stops.length + el.segments[1].stops.length - 1 === 0))\r\n                const oneStopsResult = [...oneStopsArray,...state.arrayWorkingOfTickets].sort((a)=>{\r\n                    a = a.segments[0].stops.length+a.segments[1].stops.length\r\n                    if(a === 1)\r\n                        return 1\r\n                });\r\n          return {\r\n              ...state,\r\n              arrayWorkingOfTickets:oneStopsResult\r\n          }\r\n      }\r\n\r\n        case 'TWO_STOPS':\r\n            if (action.payload) {\r\n                const twoStopsArray = state.arrayWorkingOfTickets.filter(el =>\r\n                    el.segments[0].stops.length + el.segments[1].stops.length - 2 !== 0)\r\n\r\n                return {\r\n                    ...state,\r\n                    arrayWorkingOfTickets:twoStopsArray\r\n                }\r\n            }else{\r\n                const twoStopsArray = state.arrayTickets.filter(el =>\r\n                    el.segments[0].stops.length + el.segments[1].stops.length - 2 === 0)\r\n                const twoStopsResult = [...twoStopsArray,...state.arrayWorkingOfTickets].sort((a)=>{\r\n                    a = a.segments[0].stops.length+a.segments[1].stops.length\r\n                    if(a === 2)\r\n                        return 1\r\n                });\r\n                return {\r\n                    ...state,\r\n                    arrayWorkingOfTickets:twoStopsResult\r\n                }\r\n            }\r\n\r\n      case 'THREE_STOPS':\r\n          if (action.payload) {\r\n              const threeStopsArray = state.arrayWorkingOfTickets.filter(el =>\r\n                  !(el.segments[0].stops.length + el.segments[1].stops.length - 3 === 0))\r\n              return {\r\n                  ...state,\r\n                  arrayWorkingOfTickets:threeStopsArray\r\n              }\r\n          }else{\r\n              const threeStopsArray = state.arrayTickets.filter(el =>\r\n                  (el.segments[0].stops.length + el.segments[1].stops.length - 3 === 0))\r\n              const threeStopsResult = [...threeStopsArray,...state.arrayWorkingOfTickets,].sort((a)=>{\r\n                  a = a.segments[0].stops.length+a.segments[1].stops.length\r\n                  // console.log(\"AAAAAA\",a)\r\n                  if(a === 3)\r\n                      return 1\r\n              });\r\n              return {\r\n                  ...state,\r\n                  arrayWorkingOfTickets:threeStopsResult\r\n              }\r\n          }\r\n\r\n    case 'CHECKED_ALL':\r\n      if (action.payload === 1) {\r\n        if (!state.checkBoxSettings[0].isChecked) {\r\n          const newCheckBoxSettings = state.checkBoxSettings.map(el => ({...el, isChecked: true}))\r\n            return {\r\n            ...state,\r\n            checkBoxSettings:newCheckBoxSettings,\r\n            arrayWorkingOfTickets: state.arrayTickets\r\n          }\r\n        } else {\r\n          const newCheckBoxSettings = state.checkBoxSettings.map(el => ({...el, isChecked: false}))\r\n          return {\r\n              ...state,\r\n              checkBoxSettings:newCheckBoxSettings,\r\n              arrayWorkingOfTickets: []\r\n          }\r\n        }\r\n      };\r\n\r\n    case \"CHECKED\":\r\n      const newCheckBoxSettings = state.checkBoxSettings.map((el) =>\r\n        ( el.id === action.payload ? {...el, isChecked: !el.isChecked}: el))\r\n\r\n      const toggleAllChecked = () => {\r\n        const index = newCheckBoxSettings.slice(1)\r\n        const controlChecked = index.every(el=>el.isChecked===true)\r\n        const indexStart = newCheckBoxSettings.slice(0,1)\r\n        indexStart[0].isChecked = controlChecked\r\n       }\r\n      if (action.payload !== 1) {\r\n        toggleAllChecked()\r\n        return {...state,checkBoxSettings:newCheckBoxSettings}\r\n      }\r\n\r\n    case 'FETCH_REQUEST_GOOD':\r\n      const oldTicket = state.arrayTickets;\r\n      return {\r\n        ...state,\r\n        arrayTickets: [...oldTicket, ...action.payload],\r\n        arrayWorkingOfTickets: [...oldTicket, ...action.payload]\r\n      }\r\n\r\n    case 'THE_CHEAPSET':\r\n        const cheapset = state.arrayWorkingOfTickets.sort((a,b) => (a.price - b.price)\r\n        )\r\n      return {\r\n        ...state,\r\n        arrayWorkingOfTickets: cheapset\r\n      }\r\n\r\n    case \"THE_FASTEST\":\r\n      const fastest = [...state.arrayWorkingOfTickets].sort ((a,b) =>\r\n          (a.segments[0].duration + a.segments[1].duration)-(b.segments[0].duration + b.segments[1].duration)\r\n    )\r\n      return {\r\n        ...state,\r\n        arrayWorkingOfTickets: fastest\r\n      }\r\n\r\n    default:\r\n      console.log (\"default\")\r\n      return  state;\r\n\r\n  }\r\n};\r\n\r\nexport default reducer;","const searchIdUrl = \"https://front-test.beta.aviasales.ru/search\"\r\nconst requestUrl = \"https://front-test.beta.aviasales.ru/tickets\"\r\n\r\nasync function sendRequestPattern(method, URL) {\r\n  try {\r\n    const response = await fetch(URL)\r\n    if (response.ok){\r\n      const data = await response.json()\r\n      return data\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.err(e)\r\n  }\r\n}\r\nconst getSearchId = sendRequestPattern(\"GET\", searchIdUrl);\r\nconst getSearchToKey =(searchId) =>\r\n  sendRequestPattern(\"GET\", `${requestUrl}?searchId=${searchId}`)\r\n\r\nexport{getSearchId,getSearchToKey}","import {getSearchId, getSearchToKey} from \"../fetch\"\r\nexport const toggleCheckAll= (id)=>\r\n    ({\r\n        type: 'CHECKED_ALL',\r\n        payload: id,\r\n    });\r\n\r\nexport const toggleCheckbox  = (id,isChecked)=>(dispatch)=> {\r\n    dispatch({\r\n        type: 'CHECKED',\r\n        payload: id,\r\n    })\r\n    if(id === 2) {dispatch(NON_STOPS(isChecked))}\r\n    if(id === 3) {dispatch(ONE_STOPS(isChecked))}\r\n    if(id === 4) {dispatch(TWO_STOPS(isChecked))}\r\n    if(id === 5) {dispatch(THREE_STOPS(isChecked))}\r\n};\r\n\r\nexport const NON_STOPS = (isChecked)=>\r\n    ({\r\n      type:'NON_STOPS',\r\n      payload: isChecked,\r\n    })\r\n\r\nexport const ONE_STOPS = (isChecked)=>\r\n    ({\r\n      type:\"ONE_STOPS\",\r\n      payload: isChecked\r\n    })\r\n\r\nexport const TWO_STOPS = (isChecked)=>\r\n    ({\r\n        type: \"TWO_STOPS\",\r\n        payload: isChecked\r\n    })\r\n\r\nexport const THREE_STOPS = (isChecked)=>\r\n    ({\r\n      type:\"THREE_STOPS\",\r\n      payload: isChecked\r\n    })\r\n\r\nexport const FETCH_REQUEST = (boolean) => ({ type: 'FETCH_REQUEST', payload:boolean});\r\nexport const FETCH_REQUEST_GOOD = (tickets) => ({ type: 'FETCH_REQUEST_GOOD', payload: tickets });\r\nexport const FETCH_REQUEST_BAD = () => ({ type: 'FETCH_REQUEST_BAD', payload: 'Error' });\r\n\r\nexport const GET_TICKETS = () => async(dispatch) => {\r\n  const searchId = await getSearchId;\r\n\r\n  const request = async () => {\r\n    try {\r\n      const tickets = await getSearchToKey(searchId.searchId)\r\n        dispatch(FETCH_REQUEST_GOOD(tickets.tickets));\r\n      dispatch(FETCH_REQUEST(true));\r\n      if(!tickets.stop) {\r\n          dispatch(FETCH_REQUEST_BAD());\r\n        return request();\r\n      }else{\r\n          dispatch(FETCH_REQUEST(false));\r\n      }\r\n    } catch (e) {\r\n      return request();\r\n    }\r\n  }\r\n  return request();\r\n};\r\n","import React from \"react\";\r\nimport './Filter.css';\r\nimport { connect } from \"react-redux\";\r\nimport * as actionsForFilter from '../../actions/actionsForFilter'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction Filter (props) {\r\n  const {state, toggleCheckAll, toggleCheckbox, GET_TICKETS} = props\r\n  const elements = state.checkBoxSettings.map((el) => {\r\n    const { label, id, isChecked,disabled } = el\r\n    return (\r\n      <label key={ id } className=\"container__checkbox option\">\r\n        <input type=\"checkbox\" className=\"check__input totalCheckbox\"\r\n               onClick = {() => {\r\n                 id === 1? toggleCheckAll(id,isChecked):toggleCheckbox(id,isChecked)}\r\n               }\r\n               checked={isChecked}\r\n               disabled={disabled}\r\n        />\r\n        <span className=\"custom__check__box\"/>\r\n        {label}\r\n      </label>\r\n      );\r\n    });\r\n  return (\r\n      <div className=\"filter__checkbox__wrapper\">\r\n            <span className=\"container__checkbox__name option\">\r\n              КОЛИЧЕСТВО ПЕРЕСАДОК\r\n            </span>\r\n        {elements}\r\n      </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state)=> {\r\n  return {\r\n    state\r\n  };\r\n}\r\n\r\nFilter.propTypes = {\r\n    state: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    GET_TICKETS: PropTypes.func.isRequired,\r\n    toggleCheckAll:PropTypes.func.isRequired,\r\n    toggleCheckbox:PropTypes.func.isRequired,\r\n\r\n};\r\n\r\n\r\nexport default connect (mapStateToProps, actionsForFilter )(Filter)","\r\nexport const THE_CHEAPSET = ()=> ({\r\n  type:'THE_CHEAPSET',\r\n  // payload: id,\r\n});\r\nexport const THE_FASTEST = ()=> ({\r\n  type:'THE_FASTEST',\r\n  // payload: id,\r\n});\r\nexport const OPTIMAL = (id) => ({\r\n  type:'OPTIMAL',\r\n  payload: id,\r\n});","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport './Tabs.css';\r\nimport * as actionsForSortingTickets from \"../../actions/actionsForSortingTickets\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction SortingTickets(props) {\r\n const {state,THE_CHEAPSET,THE_FASTEST} = props\r\n  console.log ('State in Filter ticket',props)\r\n  return (\r\n    <div className=\"tabs\">\r\n      <button className=\"tabs__button\"\r\n              value=\"САМЫЙ ДЕШЕВЫЙ\"\r\n              disabled={state.loadingEnd}\r\n              onClick={THE_CHEAPSET}>САМЫЙ ДЕШЕВЫЙ\r\n      </button>\r\n      <button className=\"tabs__button\"\r\n              value=\"САМЫЙ БЫСТРЫЙ\"\r\n              onClick={THE_FASTEST}\r\n      >САМЫЙ БЫСТРЫЙ</button>\r\n    </div>\r\n  )\r\n}\r\nconst mapStateToProps = (state)=> {\r\n  return {\r\n    state\r\n  };\r\n}\r\n\r\nSortingTickets.propTypes = {\r\n    state: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    THE_FASTEST: PropTypes.func.isRequired,\r\n    THE_CHEAPSET:PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect (mapStateToProps, actionsForSortingTickets )(SortingTickets)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport logoS7 from \"../App/img/S7 Logo.svg\";\r\nimport * as actionsForTickets from '../../actions/actionsForSortingTickets'\r\nimport './ticket.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nfunction TicketBody (props) {\r\n\r\n\r\n  const arrayTickets = props.state.arrayWorkingOfTickets.map(el =>{\r\n\r\n    const {price,carrier,segments}=el\r\n    const date0 = new Date(segments[0].date)\r\n    const date1 = new Date(segments[1].date)\r\n\r\n    const getTimeFlay = (date)=>{\r\n      const dateFinal = new Date(date.getTime()+(segments[0].duration*60000))\r\n      const result  = `${date.getHours()}:${date.getMinutes()>10?date.getMinutes():`0${date.getMinutes()}`}\r\n      -${dateFinal.getHours()}:${dateFinal.getMinutes()>10?dateFinal.getMinutes():`0${dateFinal.getMinutes()}`}`\r\n      return result.toString()\r\n    }\r\n\r\n    const timeToFlay = (min)=>{\r\n      const result = `${Math.trunc(min/60)}ч ${min%60} мин`\r\n      return result\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"ticket\" >\r\n        <div className=\"ticket__header\">\r\n                  <span className=\"ticket__price\">\r\n                    {`${price} Р`}\r\n                  </span>\r\n          <img src={logoS7} alt = \"лого S7\" className=\"logo_S7\">\r\n          </img>\r\n        </div>\r\n        <div className=\"ticket__container__info\">\r\n          <div className= \"ticket__info\">\r\n            <div className=\"info__ticket__route\">\r\n            <span className=\"info__ticket__route__title\">\r\n              {`${segments[0].origin} - ${segments[0].destination}`}\r\n            </span>\r\n              <span className=\"info__ticket__route__time\">\r\n                 {getTimeFlay(date0)}\r\n            </span>\r\n            </div>\r\n            <div className=\"info__ticket__lenght\">\r\n              <span className=\"info__ticket__lenght__text\">В ПУТИ</span>\r\n              <span className=\"info__ticket__lenght__time\">\r\n                {timeToFlay(segments[0].duration)}\r\n            </span>\r\n            </div>\r\n            <div className=\"info__ticket__stops\">\r\n            <span className=\"info__ticket__stops__counter\">\r\n              {`${segments[0].stops.length} ПЕРЕСАДКИ`}\r\n            </span>\r\n              <span className=\"info__ticket__stops__name\">\r\n               {segments[0].stops.join(', ')}\r\n            </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"ticket__info\">\r\n            <div className=\"info__ticket__route\">\r\n              <span className=\"info__ticket__route__title\">\r\n                {`${segments[1].origin} - ${segments[1].destination}`}\r\n              </span>\r\n              <span className=\"info__ticket__route__time\">\r\n                {getTimeFlay(date1)}\r\n              </span>\r\n            </div>\r\n            <div className=\"info__ticket__lenght\">\r\n              <span className=\"info__ticket__lenght__text\">В ПУТИ</span>\r\n              <span className=\"info__ticket__lenght__time\">\r\n                {timeToFlay(segments[1].duration)}\r\n              </span>\r\n            </div>\r\n            <div className=\"info__ticket__stops\">\r\n              <span className=\"info__ticket__stops__counter\">\r\n                {`${segments[1].stops.length} ПЕРЕСАДКИ`}\r\n              </span>\r\n              <span className=\"info__ticket__stops__name\">\r\n                {segments[1].stops.join(', ')}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  })\r\n  return arrayTickets.slice(0, 5);\r\n}\r\nconst mapStateToProps = (state)=> {\r\n  return {\r\n    state\r\n  };\r\n}\r\n\r\nTicketBody.propTypes = {\r\n  state: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  arrayTickets: PropTypes.array,\r\n};\r\n\r\n\r\nexport default connect (mapStateToProps, actionsForTickets )(TicketBody)","import React, {useEffect} from 'react';\nimport logo from './img/LogoAirplan.svg'\nimport './App.css';\nimport { Spin } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport PropTypes from 'prop-types';\nimport Filter from \"../Filter/Filter\";\nimport SortingTickets from \"../tabs/sortingTickets\";\nimport TicketBody from \"../ticket/ticketBody\";\nimport {connect} from \"react-redux\";\nimport * as actionsForFilter from \"../../actions/actionsForFilter\";\n\nconst antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />\n\nconst marginSpinner = {\n    marginTop: '50%',\n}\n\nfunction App(props) {\n    const{state,GET_TICKETS} = props\n\n    useEffect(() => {\n       GET_TICKETS();\n    }, [GET_TICKETS]);\n\n    const hideBodyTickets = ()=>{\n        if(state.arrayWorkingOfTickets.length===0){\n           return (<p>Рейсов, подходящих под заданные фильтры, не найдено</p>)\n            } else {return (<TicketBody/>)}\n    }\n  return (\n    <div className=\"App\">\n      <div className=\"logo__container\">\n        <img src={logo} alt = \"лого самолет\" className=\"logo-airplane-png\"/>\n      </div>\n      <Filter/>\n      <div className=\"container__result\">\n          <SortingTickets/>\n          <Spin spinning = {state.loadingEnd} size={\"large\"} indicator={antIcon} className={marginSpinner}/>\n          {hideBodyTickets()}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state)=> {\n    return {\n        state\n    };\n}\n\nApp.propTypes = {\n    state: PropTypes.arrayOf(PropTypes.object).isRequired,\n    GET_TICKETS: PropTypes.func.isRequired,\n};\n\nexport default connect (mapStateToProps, actionsForFilter )(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reduxThunk from \"redux-thunk\"\nimport reducer from \"./reducer/reducer\";\n\nimport './components/App/App.css';\nimport App from \"./components/App/App\";\nimport {logger} from \"./middleware/logger\";\n\nconst store = createStore( reducer,\n  applyMiddleware(\n    logger,\n    reduxThunk\n  ));\n\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","export  const logger = (store) => (next) => (action)=>{\r\n\r\n  console.log ('dispatchung:', action)\r\n  console.log ('before:', store.getState())\r\n\r\n  const result = next(action)\r\n\r\n  console.log ('after:', store.getState())\r\n  return result\r\n}","module.exports = __webpack_public_path__ + \"static/media/LogoAirplan.3fe3a289.svg\";","module.exports = __webpack_public_path__ + \"static/media/S7 Logo.35aae663.svg\";"],"sourceRoot":""}